=begin
#jbpm

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 7.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for JBPMAPIClient::DocumentsBPMApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DocumentsBPMApi' do
  before do
    # run before each test
    @instance = JBPMAPIClient::DocumentsBPMApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DocumentsBPMApi' do
    it 'should create an instance of DocumentsBPMApi' do
      expect(@instance).to be_instance_of(JBPMAPIClient::DocumentsBPMApi)
    end
  end

  # unit tests for create_document
  # Creates new document based on given content (body)
  # 
  # @param body document content represented as DocumentInstance
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'create_document test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_document
  # Deletes document identified by given document id
  # 
  # @param document_id document id of a document that should be deleted
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_document test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_document
  # Retrieves document identified by given documentId
  # 
  # @param document_id document id of a document that should be retruned
  # @param [Hash] opts the optional parameters
  # @return [DocumentInstance]
  describe 'get_document test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_document_content
  # Retrieves document&#39;s content identified by given documentId
  # 
  # @param document_id document id of a document that content should be retruned from
  # @param [Hash] opts the optional parameters
  # @return [Array<String>]
  describe 'get_document_content test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_documents
  # Retrieves documents that are stored in the system, with pagination
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page optional pagination - at which page to start, defaults to 0 (meaning first)
  # @option opts [Integer] :page_size optional pagination - size of the result, defaults to 10
  # @return [DocumentInstanceList]
  describe 'list_documents test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_document
  # Updates document identified by given document id based on given content (body)
  # 
  # @param document_id document id of a document that should be updated
  # @param body document content represented as DocumentInstance
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_document test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
