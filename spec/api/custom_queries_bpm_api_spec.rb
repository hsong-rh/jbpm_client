=begin
#jbpm

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 7.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for JBPMAPIClient::CustomQueriesBPMApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CustomQueriesBPMApi' do
  before do
    # run before each test
    @instance = JBPMAPIClient::CustomQueriesBPMApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CustomQueriesBPMApi' do
    it 'should create an instance of CustomQueriesBPMApi' do
      expect(@instance).to be_instance_of(JBPMAPIClient::CustomQueriesBPMApi)
    end
  end

  # unit tests for create_query_definition
  # Registers new query definition in the system with given queryName
  # 
  # @param query_name identifier of the query definition to be registered
  # @param body query definition represented as QueryDefinition
  # @param [Hash] opts the optional parameters
  # @return [QueryDefinition]
  describe 'create_query_definition test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for drop_query_definition
  # Deletes existing query definition from the system with given queryName
  # 
  # @param query_name identifier of the query definition to be deleted
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'drop_query_definition test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_queries
  # Retruns all custom queries defined in the system
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page optional pagination - at which page to start, defaults to 0 (meaning first)
  # @option opts [Integer] :page_size optional pagination - size of the result, defaults to 10
  # @return [QueryDefinitions]
  describe 'get_queries test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_query
  # Retrieves existing query definition from the system with given queryName
  # 
  # @param query_name identifier of the query definition to be retrieved
  # @param [Hash] opts the optional parameters
  # @return [QueryDefinition]
  describe 'get_query test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for replace_query_definition
  # Replaces existing query definition or registers new if not exists in the system with given queryName
  # 
  # @param query_name identifier of the query definition to be replaced
  # @param body query definition represented as QueryDefinition
  # @param [Hash] opts the optional parameters
  # @return [QueryDefinition]
  describe 'replace_query_definition test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for run_query
  # Queries using query definition identified by queryName. Maps the result to concrete objects based on provided mapper.
  # 
  # @param query_name identifier of the query definition to be used for query
  # @param mapper identifier of the query mapper to be used when transforming results
  # @param [Hash] opts the optional parameters
  # @option opts [String] :order_by optional sort order
  # @option opts [Integer] :page optional pagination - at which page to start, defaults to 0 (meaning first)
  # @option opts [Integer] :page_size optional pagination - size of the result, defaults to 10
  # @return [Array<Object>]
  describe 'run_query test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for run_query_filtered
  # Queries using query definition identified by queryName. Maps the result to concrete objects based on provided mapper. Query is additional altered by the filter spec and/or builder
  # 
  # @param query_name identifier of the query definition to be used for query
  # @param mapper identifier of the query mapper to be used when transforming results
  # @param [Hash] opts the optional parameters
  # @option opts [String] :builder optional identifier of the query builder to be used for query conditions
  # @option opts [Integer] :page optional pagination - at which page to start, defaults to 0 (meaning first)
  # @option opts [Integer] :page_size optional pagination - size of the result, defaults to 10
  # @option opts [String] :body optional query filter specification represented as QueryFilterSpec
  # @return [Object]
  describe 'run_query_filtered test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for run_query_filtered_by_deployment_id
  # Queries using query definition identified by queryName filtered by container. Maps the result to concrete objects based on provided mapper. Query is additional altered by the filter spec and/or builder
  # 
  # @param id container id to filter queries
  # @param query_name identifier of the query definition to be used for query
  # @param mapper identifier of the query mapper to be used when transforming results
  # @param [Hash] opts the optional parameters
  # @option opts [String] :builder optional identifier of the query builder to be used for query conditions
  # @option opts [Integer] :page optional pagination - at which page to start, defaults to 0 (meaning first)
  # @option opts [Integer] :page_size optional pagination - size of the result, defaults to 10
  # @option opts [String] :body optional query filter specification represented as QueryFilterSpec
  # @return [Object]
  describe 'run_query_filtered_by_deployment_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
