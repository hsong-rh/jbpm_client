=begin
#jbpm

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 7.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for JBPMAPIClient::CaseInstancesCaseManagementApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CaseInstancesCaseManagementApi' do
  before do
    # run before each test
    @instance = JBPMAPIClient::CaseInstancesCaseManagementApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CaseInstancesCaseManagementApi' do
    it 'should create an instance of CaseInstancesCaseManagementApi' do
      expect(@instance).to be_instance_of(JBPMAPIClient::CaseInstancesCaseManagementApi)
    end
  end

  # unit tests for add_comment
  # Adds new comment to given case instance
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param body actual content of the comment to be added as String
  # @param [Hash] opts the optional parameters
  # @option opts [String] :author optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @option opts [Array<String>] :restricted_to optional role name(s) that given comment should be restricted to
  # @return [nil]
  describe 'add_comment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_dynamic_process_to_case
  # Adds dynamic subprocess identified by process id to case instance
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param p_id process id of the subprocess to be added
  # @param body data for dynamic subprocess
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'add_dynamic_process_to_case test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_dynamic_stage_process_to_case
  # Adds dynamic subprocess identified by process id to stage within case instance
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param case_stage_id identifier of the stage within case instance where dynamic subprocess should be added
  # @param p_id process id of the subprocess to be added
  # @param body data for dynamic subprocess
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'add_dynamic_stage_process_to_case test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_dynamic_stage_task_to_case
  # Adds dynamic task (user or service depending on the payload) to given stage within case instance
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param case_stage_id identifier of the stage within case instance where dynamic task should be added
  # @param body data for dynamic task (it represents task specification that drives the selection of the type of task)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'add_dynamic_stage_task_to_case test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_dynamic_task_to_case
  # Adds dynamic task (user or service depending on the payload) to case instance
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param body data for dynamic task (it represents task specification that drives the selection of the type of task)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'add_dynamic_task_to_case test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_role_assignment
  # Adds new role assignment for given case, it can be either user or group based assignment
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param case_role_name name of the case role the assignment should be set
  # @param user user to be aded to case role for given case instance
  # @param group group to be aded to case role for given case instance
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'add_role_assignment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_case_instance
  # Cancels case instance with given identifier (case id) and has optional flag to permanently destroy the case instance
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :destroy allows to destroy (permanently) case instance as part of the cancel operation, defaults to false
  # @return [nil]
  describe 'cancel_case_instance test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for close_case_instance
  # Closes case instance with given identifier (case id) optionally with comment
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body optional comment when closing a case instance as String
  # @return [nil]
  describe 'close_case_instance test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_case_instance_data
  # Removes data items identified by name(s) from case instance&#39;s case file
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param data_id one or more names of the data items to be removed from case file
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_case_instance_data test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_case_definitions_by_container
  # Retrieves case definition for given container only, applies pagination
  # 
  # @param id container id that should be used to filter case definitions
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page optional pagination - at which page to start, defaults to 0 (meaning first)
  # @option opts [Integer] :page_size optional pagination - size of the result, defaults to 10
  # @option opts [String] :sort optional sort column, no default
  # @option opts [BOOLEAN] :sort_order optional sort direction (asc, desc) - defaults to asc
  # @return [CaseDefinitionList]
  describe 'get_case_definitions_by_container test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_case_definitions_by_definition
  # Retrieves case definition for given container and case definition id
  # 
  # @param id container id that should be used to filter case definitions
  # @param case_def_id case definition id that should be loaded
  # @param [Hash] opts the optional parameters
  # @return [CaseDefinition]
  describe 'get_case_definitions_by_definition test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_case_instance
  # Retrieves active case instance by given identifier (case id) with optionally loading data, roles, milestones and stages
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_data optional flag to load data when loading case instance
  # @option opts [BOOLEAN] :with_roles optional flag to load roles when loading case instance
  # @option opts [BOOLEAN] :with_milestones optional flag to load milestones when loading case instance
  # @option opts [BOOLEAN] :with_stages optional flag to load stages when loading case instance
  # @return [CaseInstance]
  describe 'get_case_instance test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_case_instance_active_nodes
  # Retrieves node instances from case instance
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :completed optional flag that allows to control which node instances to load - active or completed, defaults to false loading only active ones
  # @option opts [Integer] :page optional pagination - at which page to start, defaults to 0 (meaning first)
  # @option opts [Integer] :page_size optional pagination - size of the result, defaults to 10
  # @return [NodeInstanceList]
  describe 'get_case_instance_active_nodes test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_case_instance_ad_hoc_fragments
  # Retrieves adhoc fragments from case instance
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param [Hash] opts the optional parameters
  # @return [CaseAdhocFragmentList]
  describe 'get_case_instance_ad_hoc_fragments test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_case_instance_comments
  # Retrieves comments from case instance
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort optional sort column, no default
  # @option opts [Integer] :page optional pagination - at which page to start, defaults to 0 (meaning first)
  # @option opts [Integer] :page_size optional pagination - size of the result, defaults to 10
  # @return [CaseCommentList]
  describe 'get_case_instance_comments test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_case_instance_data
  # Retrieves case instance data as map where key is the name of data item and value is actual instance of the data item from case file
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :name optional name(s) of the data items to retrieve
  # @return [Hash<String, Object>]
  describe 'get_case_instance_data test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_case_instance_data_by_name
  # Retrieves case instance data by data item name
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param data_id name of the data item within case file to retrieve
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'get_case_instance_data_by_name test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_case_instance_milestones
  # Retrieves milestones from case instance
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :achieved_only optional flag that allows to control which milestones to load - achieved only or actives ones too, defaults to true
  # @option opts [Integer] :page optional pagination - at which page to start, defaults to 0 (meaning first)
  # @option opts [Integer] :page_size optional pagination - size of the result, defaults to 10
  # @return [CaseMilestoneList]
  describe 'get_case_instance_milestones test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_case_instance_process_instance
  # Retrieves process instances that compose complete case instance
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :status optional process instance status (active, completed, aborted) - defaults ot active (1) only
  # @option opts [Integer] :page optional pagination - at which page to start, defaults to 0 (meaning first)
  # @option opts [Integer] :page_size optional pagination - size of the result, defaults to 10
  # @option opts [String] :sort optional sort column, no default
  # @option opts [BOOLEAN] :sort_order optional sort direction (asc, desc) - defaults to asc
  # @return [ProcessInstanceList]
  describe 'get_case_instance_process_instance test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_case_instance_role_assignments
  # Retrieves role assignments from case instance
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param [Hash] opts the optional parameters
  # @return [CaseRoleAssignmentList]
  describe 'get_case_instance_role_assignments test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_case_instance_stages
  # Retrieves stages from case instance
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :active_only optional flag that allows to control which stages to load - active only or completed ones too, defaults to true
  # @option opts [Integer] :page optional pagination - at which page to start, defaults to 0 (meaning first)
  # @option opts [Integer] :page_size optional pagination - size of the result, defaults to 10
  # @return [CaseStageList]
  describe 'get_case_instance_stages test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_case_instances_by_container
  # Retrieves case instances for given container only, allows to filter by case instance status and applies pagination
  # 
  # @param id container id that should be used to filter case instances
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :status optional case instance status (open, closed, canceled) - defaults ot open (1) only
  # @option opts [Integer] :page optional pagination - at which page to start, defaults to 0 (meaning first)
  # @option opts [Integer] :page_size optional pagination - size of the result, defaults to 10
  # @option opts [String] :sort optional sort column, no default
  # @option opts [BOOLEAN] :sort_order optional sort direction (asc, desc) - defaults to asc
  # @return [CaseInstanceList]
  describe 'get_case_instances_by_container test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_case_instances_by_definition
  # Retrieves case instances for given case definition only, allows to filter by case instance status and applies pagination
  # 
  # @param id container id that should be used to filter case instances
  # @param case_def_id case definition id that should be used to filter case instances
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :status optional case instance status (open, closed, canceled) - defaults ot open (1) only
  # @option opts [Integer] :page optional pagination - at which page to start, defaults to 0 (meaning first)
  # @option opts [Integer] :page_size optional pagination - size of the result, defaults to 10
  # @option opts [String] :sort optional sort column, no default
  # @option opts [BOOLEAN] :sort_order optional sort direction (asc, desc) - defaults to asc
  # @return [CaseInstanceList]
  describe 'get_case_instances_by_definition test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_case_instance_data
  # Puts new data (map of variables) into case instance&#39;s case file
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param body map of data to be placed in case file as Map
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :restricted_to optional role name(s) that given data should be restricted to
  # @return [nil]
  describe 'put_case_instance_data test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_case_instance_data_by_name
  # Puts new data (single data identified by name) into case instance&#39;s case file
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param data_id name of the data item to be added to case file
  # @param body data to be placed in case file, any type can be provided
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :restricted_to optional role name(s) that given data should be restricted to
  # @return [nil]
  describe 'put_case_instance_data_by_name test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_comment
  # Removes given comment from case instance
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param case_comment_id identifier of the comment to be removed
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'remove_comment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_role_assignment
  # Removes role assignment from user or group for given case instance
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param case_role_name name of the case role the assignment should be removed
  # @param user user to be removed from case role for given case instance
  # @param group group to be removed from case role for given case instance
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'remove_role_assignment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reopen_case
  # Reopens case instance with given identifier (case id) by initiating given case definition
  # 
  # @param id container id where the case definition resides
  # @param case_def_id case definition id that new instance should be created from
  # @param case_id identifier of the case instance
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body optional CaseFile with variables and/or case role assignments
  # @return [nil]
  describe 'reopen_case test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for start_case
  # Starts new case instance of given case definition within given container with optional initial CaseFile (that provides variables and case role assignment)
  # 
  # @param id container id where the case definition resides
  # @param case_def_id case definition id that new instance should be created from
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body optional CaseFile with variables and/or case role assignments
  # @return [String]
  describe 'start_case test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for trigger_ad_hoc_node
  # Triggers ad hoc fragment in case instance with optional data
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param node_name name of the adhoc fragment to be triggered
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body optional data to be given when triggering adhoc fragment
  # @return [nil]
  describe 'trigger_ad_hoc_node test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for trigger_ad_hoc_node_in_stage
  # Triggers ad hoc fragment in stage within case instance with optional data
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param case_stage_id identifier of the stage within case instance where adhoc fragment should be triggered
  # @param node_name name of the adhoc fragment to be triggered
  # @param [Hash] opts the optional parameters
  # @option opts [String] :body optional data to be given when triggering adhoc fragment
  # @return [nil]
  describe 'trigger_ad_hoc_node_in_stage test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_comment
  # Updates comment within case instance
  # 
  # @param id container id that case instance belongs to
  # @param case_id identifier of the case instance
  # @param case_comment_id identifier of the comment to be updated
  # @param body actual content of the comment to be updated to as String
  # @param [Hash] opts the optional parameters
  # @option opts [String] :author optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @option opts [Array<String>] :restricted_to optional role name(s) that given comment should be restricted to
  # @return [nil]
  describe 'update_comment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
