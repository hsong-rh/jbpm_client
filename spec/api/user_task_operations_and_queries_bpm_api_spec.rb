=begin
#jbpm

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 7.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for JBPMAPIClient::UserTaskOperationsAndQueriesBPMApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'UserTaskOperationsAndQueriesBPMApi' do
  before do
    # run before each test
    @instance = JBPMAPIClient::UserTaskOperationsAndQueriesBPMApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UserTaskOperationsAndQueriesBPMApi' do
    it 'should create an instance of UserTaskOperationsAndQueriesBPMApi' do
      expect(@instance).to be_instance_of(JBPMAPIClient::UserTaskOperationsAndQueriesBPMApi)
    end
  end

  # unit tests for activate
  # Activates task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that should be activated
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @return [nil]
  describe 'activate test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_attachment
  # Adds attachment to task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that attachment should be added to
  # @param name name of the attachment to be added
  # @param body attachment content, any type can be provided
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @return [Integer]
  describe 'add_attachment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_comment_by_instance_id
  # Adds comment to task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that comment should be added to
  # @param body comment data as TaskComment
  # @param [Hash] opts the optional parameters
  # @return [Integer]
  describe 'add_comment_by_instance_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for claim
  # Claims task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that should be claimed
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @return [nil]
  describe 'claim test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for complete
  # Completes task with given id that belongs to given container, optionally it can claim and start task when auto-progress is used
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that should be completed
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @option opts [BOOLEAN] :auto_progress optional flag that allows to directlu claim and start task (if needed) before completion
  # @option opts [String] :body optional map of output variables
  # @return [nil]
  describe 'complete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delegate
  # Delegates task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that should be delegated
  # @param target_user user that task should be dalegated to
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @return [nil]
  describe 'delegate test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_attachment
  # Deletes attachment from task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that attachment belongs to
  # @param attachment_id identifier of the attachment to be deleted
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_attachment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_comment
  # Deletes comment from task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that comment belongs to
  # @param comment_id identifier of the comment to be deleted
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_comment test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_content
  # Deletes content from task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that content belongs to
  # @param content_id identifier of the content to be deleted
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_content test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for exit
  # Exists task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that should be exited
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @return [nil]
  describe 'exit test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for fail
  # Fails task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that should be failed
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @option opts [String] :body optional map of output variables
  # @return [nil]
  describe 'fail test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for forward
  # Forwards task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that should be forwarded
  # @param target_user user that the task should be forwarded to
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @return [nil]
  describe 'forward test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_attachment_by_id
  # Retrieves attachment with given id from task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that attachment belongs to
  # @param attachment_id identifier of the attachment to be loaded
  # @param [Hash] opts the optional parameters
  # @return [TaskAttachment]
  describe 'get_attachment_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_attachment_content_by_id
  # Retrieves attachment&#39;s content with given id from task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that attachment belongs to
  # @param attachment_id identifier of the attachment that content should be loaded from
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'get_attachment_content_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_attachments_by_task_id
  # Retrieves attachments from task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that attachments should be loaded for
  # @param [Hash] opts the optional parameters
  # @return [TaskAttachmentList]
  describe 'get_attachments_by_task_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_comment_by_id
  # Retrieves comment with given id from task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that comment belongs to
  # @param comment_id identifier of the comment to be loaded
  # @param [Hash] opts the optional parameters
  # @return [TaskComment]
  describe 'get_comment_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_comments_by_task_id
  # Retrieves comments from task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that comments should be loaded for
  # @param [Hash] opts the optional parameters
  # @return [TaskCommentList]
  describe 'get_comments_by_task_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_task
  # Retrieves task with given id that belongs to given container, optionally loads its input, output data and assignments
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that should be loaded
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :with_input_data optionally loads task input data
  # @option opts [BOOLEAN] :with_output_data optionally loads task output data
  # @option opts [BOOLEAN] :with_assignments optionally loads task people assignments
  # @return [TaskInstance]
  describe 'get_task test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_task_events_by_container_id
  # Retrieves task events for given task id and applies pagination
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that events should be loaded for
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page optional pagination - at which page to start, defaults to 0 (meaning first)
  # @option opts [Integer] :page_size optional pagination - size of the result, defaults to 10
  # @option opts [String] :sort optional sort column, no default
  # @option opts [BOOLEAN] :sort_order optional sort direction (asc, desc) - defaults to asc
  # @return [TaskEventInstanceList]
  describe 'get_task_events_by_container_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_task_input_content_by_task_id
  # Retrieves input date from task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that input data should be loaded from
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'get_task_input_content_by_task_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_task_output_content_by_task_id
  # Retrieves output date from task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that output data should be loaded from
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'get_task_output_content_by_task_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for nominate
  # Nominates task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that should be nominated
  # @param pot_owner list of users that the task should be nominated to
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @return [nil]
  describe 'nominate test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for release
  # Releases task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that should be released
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @return [nil]
  describe 'release test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for resume
  # Resumes task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that should be resumed
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @return [nil]
  describe 'resume test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for save_content
  # Saves content on task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that data should be saved into
  # @param body output data to be saved as Map 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'save_content test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_description
  # Sets description on task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance where description should be updated
  # @param body description as String
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'set_description test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_expiration_date
  # Sets expiration date on task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance where expiration date should be updated
  # @param body expiration date as Date
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'set_expiration_date test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_name
  # Sets name on task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance where name should be updated
  # @param body name as String
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'set_name test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_priority
  # Sets priority on task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance where priority should be updated
  # @param body priority as Integer
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'set_priority test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_skipable
  # Sets skipable flag on task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance where skipable flag should be updated
  # @param body skipable flag as Boolean
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'set_skipable test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for skip
  # Skips task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that should be skipped
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @return [nil]
  describe 'skip test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for start
  # Starts task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that should be started
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @return [nil]
  describe 'start test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for stop
  # Stops task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that should be stopped
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @return [nil]
  describe 'stop test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for suspend
  # Suspends task with given id that belongs to given container
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that should be suspended
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @return [nil]
  describe 'suspend test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # Updates task with given id that belongs to given container with given task instance details in body, updates name, description, priority, expiration date, form name, input and output variables
  # 
  # @param id container id that task instance belongs to
  # @param t_instance_id identifier of the task instance that should be updated
  # @param body task instance with updates as TaskInstance type
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled
  # @return [nil]
  describe 'update test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
